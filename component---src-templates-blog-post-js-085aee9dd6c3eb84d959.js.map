{"version":3,"file":"component---src-templates-blog-post-js-085aee9dd6c3eb84d959.js","mappings":"8NAyCA,MAvCiBA,KACfC,EAAAA,UAAgB,KACd,MAAMC,EAASC,SAASC,cAAc,UAsBtC,OALAC,OAAOC,QAhBY,CACjBC,IAAK,+BACLC,GAAI,gBACJ,YAAa,gBACb,eAAgB,mCAChB,mBAAoB,uBACpB,eAAgB,WAChB,aAAc,QACd,yBAA0B,IAC1B,qBAAsB,IACtB,sBAAuB,MACvB,YAAa,KACbC,YAAa,YACbC,MAAO,KAGkBC,QAAQC,IAAA,IAAEC,EAAMC,GAAMF,EAAA,OAC/CV,EAAOa,aAAaF,EAAMC,KAE5BX,SAASa,KAAKC,YAAYf,GAEnB,KACL,MAAMgB,EAAiBf,SAASa,KAAKG,cAAc,kBAC/CD,GAAgBf,SAASa,KAAKI,YAAYF,KAE/C,IAGDjB,EAAAA,cAAA,OAAKoB,UAAU,qBACbpB,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,+HAA4HA,EAAAA,cAAA,KAAGqB,KAAK,yEAAwE,wBAAyB,kDACxOrB,EAAAA,cAAA,OAAKoB,UAAU,aCiCrB,MA9DyBT,IAAyB,IAADW,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUb,EAC1C,MAAMc,EAAOF,EAAKG,eACZC,GAAkC,QAAtBL,EAAAC,EAAKK,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBQ,QAAS,SAC7C,SAAEC,EAAQ,KAAEC,GAAST,EAE3B,OACEvB,EAAAA,cAACiC,EAAAA,EAAM,CAACT,SAAUA,EAAUM,MAAOH,GACjC3B,EAAAA,cAACkC,EAAAA,EAAG,CACFJ,MAAO,GAAGL,EAAKU,YAAYL,WAAWH,IACtCS,YAAaX,EAAKU,YAAYC,aAAeX,EAAKY,UAEpDrC,EAAAA,cAAA,WACEoB,UAAU,YACVkB,WAAS,EACTC,SAAS,6BAETvC,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIwC,SAAS,YAAYf,EAAKU,YAAYL,OAC1C9B,EAAAA,cAAA,KAAGoB,UAAU,QAAQK,EAAKU,YAAYM,OAExCzC,EAAAA,cAAA,WACE0C,wBAAyB,CAAEC,OAAQlB,EAAKmB,MACxCJ,SAAS,cACTpB,UAAU,kBAMdpB,EAAAA,cAAA,OAAKoB,UAAU,iBACbpB,EAAAA,cAAA,MAAIoB,UAAU,OACdpB,EAAAA,cAAA,MACE6C,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXlD,EAAAA,cAAA,UACG+B,GACC/B,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAAO,KACtCxB,EAASI,YAAYL,QAI9B9B,EAAAA,cAAA,UACGgC,GACChC,EAAAA,cAACmD,EAAAA,KAAI,CAACC,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKG,YAAYL,MAAM,QAKhC9B,EAAAA,cAAA,MAAIoB,UAAU,QAEhBpB,EAAAA,cAACD,EAAQ,O","sources":["webpack://personal-blog-nobodyme/./src/components/comments.js","webpack://personal-blog-nobodyme/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\n\nconst Comments = () => {\n  React.useEffect(() => {\n    const script = document.createElement('script');\n    const attributes = {\n      src: 'https://giscus.app/client.js',\n      id: 'giscus-script',\n      'data-repo': 'nobodyme/blog',\n      'data-repo-id': 'MDEwOlJlcG9zaXRvcnkzNjU3NTQxMTI=',\n      'data-category-id': 'DIC_kwDOFcz3AM4CA8kh',\n      'data-mapping': 'pathname',\n      'data-theme': 'light',\n      'data-reactions-enabled': '1',\n      'data-emit-metadata': '0',\n      'data-input-position': 'top',\n      'data-lang': 'en',\n      crossOrigin: 'anonymous',\n      async: '',\n    };\n\n    Object.entries(attributes).forEach(([name, value]) =>\n      script.setAttribute(name, value),\n    );\n    document.body.appendChild(script);\n\n    return () => {\n      const existingScript = document.body.querySelector('#giscus-script');\n      if (existingScript) document.body.removeChild(existingScript);\n    };\n  }, []);\n\n  return (\n    <div className=\"comment-container\">\n      <h4>Comments</h4>\n      <p>Want to share feedback, or discuss further ideas? Feel free to leave a comment here! This comment thread directly maps to a <a href=\"https://github.com/nobodyme/blog/discussions/categories/post-comments\">discussion on GitHub</a>, so you can also comment there if you prefer.</p>\n      <div className=\"giscus\"></div>\n    </div>\n  )\n}\n\nexport default Comments;","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Comments from \"../components/comments\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n \n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={`${post.frontmatter.title} | ${siteTitle}`}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p className=\"meta\">{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n          className=\"blog-content\"\n        />\n        {/* <footer>\n          <Bio />\n        </footer> */}\n      </article>\n      <nav className=\"blog-post-nav\">\n        <hr className=\"hr\"/>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n        <hr className=\"hr\"/>\n      </nav>\n      <Comments/>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Comments","React","script","document","createElement","Object","entries","src","id","crossOrigin","async","forEach","_ref","name","value","setAttribute","body","appendChild","existingScript","querySelector","removeChild","className","href","_data$site$siteMetada","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","Layout","Seo","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}